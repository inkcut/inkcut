name: Inkcut test

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "macos-13"]
        python: ["3.8", "3.10", "3.12"]
        include:
          - qt: "PyQt6" # default values
            experimental: false
          - python: "3.8"  # with older python versions use PyQt5
            qt: "PyQt5"
          - python: "3.10"
            qt: "PyQt5"
          - os: "windows-latest" # windows added manually
            python: "3.12"
            qt: "PyQt6"
            experimental: false
          - os: "windows-latest"
            python: "3.10"
            qt: "PyQt5"
            experimental: false
          - os: "windows-latest"
            python: "3.8"
            qt: "PyQt5"
            experimental: false
        exclude:
            - os: "macos-13" # Reduce number of total macOS combinations. Use only the latest and few older ones on x86_64
              python: "3.10"

    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Linux deps
        if: contains(matrix.os, 'ubuntu')
        run: |
          sudo apt install -qq libcups2-dev
          sudo apt install -qq libegl1
      - name: Early python deps
        shell: bash
        run: |
          # Most of the deps are installed later by setup.py.
          # This is only for testing specific libs and the cases
          # where default behavior results in combination of incompatible library versions.
          if [[ "${{ contains(matrix.os, 'windows') }}" = "true" ]]
          then
            # pywin32 has some postinstall steps which don't get properly executed
            # when installing indirectly as dependency from inkcut setup.py.
            pip install pywin32
          fi
          # testing specific libs not included in setup.py
          pip install pytest pytest-coverage pytest-qt codecov
          # allow running CI tests for multiple Qt versions
          pip install "${{ matrix.qt }}"
      - name: Install inkcut
        shell: bash
        run: |
          pip install -e .
      - name: Run tests
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" = "ubuntu-latest" ]]; then
            export QT_QPA_PLATFORM=offscreen
          fi
          python -m pytest tests/
